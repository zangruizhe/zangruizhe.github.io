<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fsharp on Puzzle Hunt with Racer</title><link>https://zangruizhe.github.io/tags/fsharp/</link><description>Recent content in Fsharp on Puzzle Hunt with Racer</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 13 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zangruizhe.github.io/tags/fsharp/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code 2024 Day13</title><link>https://zangruizhe.github.io/post/aoc2024_day13/</link><pubDate>Fri, 13 Dec 2024 00:00:00 +0000</pubDate><guid>https://zangruizhe.github.io/post/aoc2024_day13/</guid><description>&lt;p>For every input, there is only one or zero solution, so that is not a coding question, it checks if you know basic math. :D&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fsharp" data-lang="fsharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Day13&lt;/span>&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> lines &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String.Join&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> lines&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> split2Int64ByReg &lt;span style="color:#e6db74">@&amp;#34;(\d+)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.concat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">fun&lt;/span> nums &lt;span style="color:#f92672">-&amp;gt;&lt;/span> nums &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.splitInto &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">.&lt;/span>Length &lt;span style="color:#f92672">/&lt;/span> 6&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getMinCost &lt;span style="color:#f92672">(&lt;/span>ai&lt;span style="color:#f92672">,&lt;/span> aj&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bi&lt;span style="color:#f92672">,&lt;/span> bj&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ti&lt;span style="color:#f92672">,&lt;/span> tj&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// a * ai + b * bi = ti
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// a * aj + b * bj = tj
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// solve a, b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// because for every a, b, t only have one or zero int solution
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> d &lt;span style="color:#f92672">=&lt;/span> ai &lt;span style="color:#f92672">*&lt;/span> bj &lt;span style="color:#f92672">-&lt;/span> aj &lt;span style="color:#f92672">*&lt;/span> bi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ti &lt;span style="color:#f92672">*&lt;/span> bj &lt;span style="color:#f92672">-&lt;/span> tj &lt;span style="color:#f92672">*&lt;/span> bi&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">/&lt;/span> d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>tj &lt;span style="color:#f92672">*&lt;/span> ai &lt;span style="color:#f92672">-&lt;/span> ti &lt;span style="color:#f92672">*&lt;/span> aj&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">/&lt;/span> d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> a &lt;span style="color:#f92672">*&lt;/span> ai &lt;span style="color:#f92672">+&lt;/span> b &lt;span style="color:#f92672">*&lt;/span> bi &lt;span style="color:#f92672">=&lt;/span> ti &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> a &lt;span style="color:#f92672">*&lt;/span> aj &lt;span style="color:#f92672">+&lt;/span> b &lt;span style="color:#f92672">*&lt;/span> bj &lt;span style="color:#f92672">=&lt;/span> tj &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Some&lt;span style="color:#f92672">(&lt;/span>a &lt;span style="color:#f92672">*&lt;/span> 3L &lt;span style="color:#f92672">+&lt;/span> b&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> None
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q1&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.toList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.choose &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> nums &lt;span style="color:#f92672">-&amp;gt;&lt;/span> getMinCost &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">],&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">],&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>3&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">[&lt;/span>4&lt;span style="color:#f92672">],&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>5&lt;span style="color:#f92672">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.sum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q2&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.toList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.choose &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> nums &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> getMinCost &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">],&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">(&lt;/span>nums&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">],&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>3&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">(&lt;/span>10000000000000L &lt;span style="color:#f92672">+&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>4&lt;span style="color:#f92672">],&lt;/span> 10000000000000L &lt;span style="color:#f92672">+&lt;/span> nums&lt;span style="color:#f92672">[&lt;/span>5&lt;span style="color:#f92672">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.sum
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Advent of Code 2024 Day9</title><link>https://zangruizhe.github.io/post/aoc2024_day9/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://zangruizhe.github.io/post/aoc2024_day9/</guid><description>&lt;p>AoC 2024 Day9 F# solution #AdventOfCode #fsharp&lt;/p>
&lt;p>Today, my solution takes 5 seconds to get the result, which means my algorithm is not good enough because AoC questions usually only take 1 second to get the result.&lt;/p>
&lt;p>let me know if you have some good ideas. :D&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fsharp" data-lang="fsharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Day9&lt;/span>&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q1&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> transform &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.mapi &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> i c &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> char2Int c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> 2 &lt;span style="color:#f92672">=&lt;/span> 0 &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Array.init n &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">_&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">$&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{i / 2}&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Array.init n &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">_&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.concat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.toArray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> lines &lt;span style="color:#f92672">=&lt;/span> String.Join&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> lines&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> transform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rec shift i j &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> j &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">match&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">with&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift i &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift 0 &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">.&lt;/span>Length &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.mapi &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> i c &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> c &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#66d9ef">int64&lt;/span> i &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int64&lt;/span> c&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> 0L&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.sum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q2&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> transform &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.mapi &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> i c &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> char2Int c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> 2 &lt;span style="color:#f92672">=&lt;/span> 0 &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Array.init n &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> idx &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>idx &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">$&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{i / 2}&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Array.init n &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> idx &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>n &lt;span style="color:#f92672">-&lt;/span> idx&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.concat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.toArray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> lines &lt;span style="color:#f92672">=&lt;/span> String.Join&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> lines&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> transform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rec shift i j &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> ni&lt;span style="color:#f92672">,&lt;/span> ci &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> nj&lt;span style="color:#f92672">,&lt;/span> cj &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> j &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">match&lt;/span> ci &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> cj &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> ni &lt;span style="color:#f92672">&amp;gt;=&lt;/span> nj &lt;span style="color:#66d9ef">with&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> n &lt;span style="color:#66d9ef">in&lt;/span> 0 &lt;span style="color:#f92672">..&lt;/span> nj &lt;span style="color:#f92672">-&lt;/span> 1 &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> nj &lt;span style="color:#f92672">-&lt;/span> n &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> n&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> n&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#f92672">(&lt;/span>fst lines&lt;span style="color:#f92672">[&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> n&lt;span style="color:#f92672">],&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift 0 &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> nj&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> ni&lt;span style="color:#f92672">)&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">_&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">_&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift i &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">_&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> shift &lt;span style="color:#f92672">(&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> cj &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> j &lt;span style="color:#f92672">-&lt;/span> nj &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0 &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift 0 &lt;span style="color:#f92672">(&lt;/span>j &lt;span style="color:#f92672">-&lt;/span> nj&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift 0 &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">.&lt;/span>Length &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.mapi &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> i &lt;span style="color:#f92672">(_,&lt;/span> c&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> c &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#66d9ef">int64&lt;/span> i &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int64&lt;/span> c&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> 0L&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.sum
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Advent of Code 2024 Day8</title><link>https://zangruizhe.github.io/post/aoc2024_day8/</link><pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate><guid>https://zangruizhe.github.io/post/aoc2024_day8/</guid><description>&lt;p>Today&amp;rsquo;s question is easy to write in mutable languages, like Python, but hard to write in FP code.&lt;/p>
&lt;p>Let me know if you have some ideas to simplify my F# code.&lt;/p>
&lt;p>Let&amp;rsquo;s improve our F# skills together! :D&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fsharp" data-lang="fsharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Day8&lt;/span>&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> R &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">.&lt;/span>Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> C &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">].&lt;/span>Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getPoints &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">:&lt;/span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">,&lt;/span> Index array&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> points &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[|&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#66d9ef">in&lt;/span> 0 &lt;span style="color:#f92672">..&lt;/span> R &lt;span style="color:#f92672">-&lt;/span> 1 &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#66d9ef">in&lt;/span> 0 &lt;span style="color:#f92672">..&lt;/span> C &lt;span style="color:#f92672">-&lt;/span> 1 &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">][&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">][&lt;/span>j&lt;span style="color:#f92672">],&lt;/span> &lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">|]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> points
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.groupBy fst
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Map.ofArray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Map.map &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">_&lt;/span> v &lt;span style="color:#f92672">-&amp;gt;&lt;/span> v &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.map snd&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> inBoard &lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> i &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> R &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> 0 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> j &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> j &lt;span style="color:#f92672">&amp;lt;&lt;/span> C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getIdxPair &lt;span style="color:#f92672">(&lt;/span>idx_list&lt;span style="color:#f92672">:&lt;/span> Index array&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#66d9ef">in&lt;/span> 0 &lt;span style="color:#f92672">..&lt;/span> idx_list&lt;span style="color:#f92672">.&lt;/span>Length &lt;span style="color:#f92672">-&lt;/span> 2 &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#66d9ef">in&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> 1 &lt;span style="color:#f92672">..&lt;/span> idx_list&lt;span style="color:#f92672">.&lt;/span>Length &lt;span style="color:#f92672">-&lt;/span> 1 &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>idx_list&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">],&lt;/span> idx_list&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getAntinodes op &lt;span style="color:#f92672">(&lt;/span>a&lt;span style="color:#f92672">:&lt;/span> Index&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>b&lt;span style="color:#f92672">:&lt;/span> Index&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">:&lt;/span> Index &lt;span style="color:#66d9ef">list&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> ar&lt;span style="color:#f92672">,&lt;/span> ac &lt;span style="color:#f92672">=&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> br&lt;span style="color:#f92672">,&lt;/span> bc &lt;span style="color:#f92672">=&lt;/span> b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> x &lt;span style="color:#f92672">=&lt;/span> abs &lt;span style="color:#f92672">(&lt;/span>ar &lt;span style="color:#f92672">-&lt;/span> br&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> y &lt;span style="color:#f92672">=&lt;/span> abs &lt;span style="color:#f92672">(&lt;/span>ac &lt;span style="color:#f92672">-&lt;/span> bc&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">match&lt;/span> ar &lt;span style="color:#f92672">&amp;lt;&lt;/span> br&lt;span style="color:#f92672">,&lt;/span> ac &lt;span style="color:#f92672">&amp;lt;&lt;/span> bc &lt;span style="color:#66d9ef">with&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(-&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>y&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> y&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(-&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> y&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>y&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>y&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">(-&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> y&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> y&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">(-&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>y&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>d1&lt;span style="color:#f92672">,&lt;/span> d2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> op a d1 &lt;span style="color:#f92672">@&lt;/span> op b d2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q1&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> points_dict &lt;span style="color:#f92672">=&lt;/span> lines &lt;span style="color:#f92672">|&amp;gt;&lt;/span> getPoints
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getAntIdx &lt;span style="color:#f92672">(&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>dr&lt;span style="color:#f92672">,&lt;/span> dc&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ar &lt;span style="color:#f92672">+&lt;/span> dr&lt;span style="color:#f92672">,&lt;/span> ac &lt;span style="color:#f92672">+&lt;/span> dc&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> points_dict&lt;span style="color:#f92672">.&lt;/span>Values
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.ofSeq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.collect &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> idx_list &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx_list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> getIdxPair
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.collect &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">,&lt;/span> r&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> getAntinodes getAntIdx l r&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.filter inBoard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Set.ofSeq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q2&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> points_dict &lt;span style="color:#f92672">=&lt;/span> lines &lt;span style="color:#f92672">|&amp;gt;&lt;/span> getPoints
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getAntinodesInLine &lt;span style="color:#f92672">(&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> y&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rec loop &lt;span style="color:#f92672">(&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">)&lt;/span> x y rst &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">(&lt;/span>inBoard &lt;span style="color:#f92672">(&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rst
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loop &lt;span style="color:#f92672">(&lt;/span>ar &lt;span style="color:#f92672">+&lt;/span> x&lt;span style="color:#f92672">,&lt;/span> ac &lt;span style="color:#f92672">+&lt;/span> y&lt;span style="color:#f92672">)&lt;/span> x y &lt;span style="color:#f92672">((&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">::&lt;/span> rst&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loop &lt;span style="color:#f92672">(&lt;/span>ar&lt;span style="color:#f92672">,&lt;/span> ac&lt;span style="color:#f92672">)&lt;/span> x y []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> points_dict&lt;span style="color:#f92672">.&lt;/span>Values
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.ofSeq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.collect &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> idx_list &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx_list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> getIdxPair
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> List.collect &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">,&lt;/span> r&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> getAntinodes getAntinodesInLine l r&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Set.ofSeq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.length
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Advent of Code 2024 Day6</title><link>https://zangruizhe.github.io/post/aoc2024_day6/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://zangruizhe.github.io/post/aoc2024_day6/</guid><description>&lt;p>Tips for Q2: If the Guard moving to &lt;code>the same direction at same position twice&lt;/code>, that means Guard is in a loop.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fsharp" data-lang="fsharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Day6&lt;/span>&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> R &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">.&lt;/span>Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> C &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">].&lt;/span>Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> getStart &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.indexed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// |&amp;gt; Array.pick (fun (i, s) -&amp;gt; s |&amp;gt; Seq.tryFindIndex ((=) &amp;#39;^&amp;#39;) |&amp;gt; Option.map (fun j -&amp;gt; (i, j)))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.pick &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> s&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> j &lt;span style="color:#f92672">=&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>IndexOf&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;^&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> j &lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1 &lt;span style="color:#66d9ef">then&lt;/span> Some&lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> None&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> ops &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#f92672">(-&lt;/span>1&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">,&lt;/span> 1&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rec moving i j op &lt;span style="color:#f92672">(&lt;/span>pos_set&lt;span style="color:#f92672">:&lt;/span> HashSet&lt;span style="color:#f92672">&amp;lt;&lt;/span>Index&lt;span style="color:#f92672">&amp;gt;)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_set&lt;span style="color:#f92672">.&lt;/span>Add&lt;span style="color:#f92672">((&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> next_i &lt;span style="color:#f92672">=&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> fst ops&lt;span style="color:#f92672">[&lt;/span>op&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> next_j &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">+&lt;/span> snd ops&lt;span style="color:#f92672">[&lt;/span>op&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> next_i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> next_i &lt;span style="color:#f92672">&amp;gt;=&lt;/span> R &lt;span style="color:#f92672">||&lt;/span> next_j &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> next_j &lt;span style="color:#f92672">&amp;gt;=&lt;/span> C &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>next_i&lt;span style="color:#f92672">][&lt;/span>next_j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;#&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> moving i j &lt;span style="color:#f92672">((&lt;/span>op &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">%&lt;/span> 4&lt;span style="color:#f92672">)&lt;/span> pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> moving next_i next_j op pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q1&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> start&lt;span style="color:#f92672">:&lt;/span> Index &lt;span style="color:#f92672">=&lt;/span> getStart lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> post_set &lt;span style="color:#f92672">=&lt;/span> moving &lt;span style="color:#f92672">(&lt;/span>fst start&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>snd start&lt;span style="color:#f92672">)&lt;/span> 0 &lt;span style="color:#f92672">(&lt;/span>HashSet()&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post_set&lt;span style="color:#f92672">.&lt;/span>Count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">member&lt;/span> this.&lt;span style="color:#a6e22e">Q2&lt;/span>() &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> start&lt;span style="color:#f92672">:&lt;/span> Index &lt;span style="color:#f92672">=&lt;/span> getStart lines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> pos_set &lt;span style="color:#f92672">=&lt;/span> moving &lt;span style="color:#f92672">(&lt;/span>fst start&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>snd start&lt;span style="color:#f92672">)&lt;/span> 0 &lt;span style="color:#f92672">(&lt;/span>HashSet()&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_set&lt;span style="color:#f92672">.&lt;/span>Remove&lt;span style="color:#f92672">(&lt;/span>start&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> isInLoop &lt;span style="color:#f92672">(&lt;/span>pos_set&lt;span style="color:#f92672">:&lt;/span> HashSet&lt;span style="color:#f92672">&amp;lt;&lt;/span>int &lt;span style="color:#f92672">*&lt;/span> int &lt;span style="color:#f92672">*&lt;/span> int&lt;span style="color:#f92672">&amp;gt;)&lt;/span> i j op &lt;span style="color:#f92672">=&lt;/span> pos_set&lt;span style="color:#f92672">.&lt;/span>Add&lt;span style="color:#f92672">((&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">,&lt;/span> op&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rec checkLoop i j op &lt;span style="color:#f92672">(&lt;/span>pos_set&lt;span style="color:#f92672">:&lt;/span> HashSet&lt;span style="color:#f92672">&amp;lt;&lt;/span>int &lt;span style="color:#f92672">*&lt;/span> int &lt;span style="color:#f92672">*&lt;/span> int&lt;span style="color:#f92672">&amp;gt;)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> next_i &lt;span style="color:#f92672">=&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> fst ops&lt;span style="color:#f92672">[&lt;/span>op&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> next_j &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">+&lt;/span> snd ops&lt;span style="color:#f92672">[&lt;/span>op&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> next_i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> next_i &lt;span style="color:#f92672">&amp;gt;=&lt;/span> R &lt;span style="color:#f92672">||&lt;/span> next_j &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> next_j &lt;span style="color:#f92672">&amp;gt;=&lt;/span> C &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>next_i&lt;span style="color:#f92672">][&lt;/span>next_j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;#&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> isInLoop pos_set i j op &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> checkLoop i j &lt;span style="color:#f92672">((&lt;/span>op &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">%&lt;/span> 4&lt;span style="color:#f92672">)&lt;/span> pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> checkLoop next_i next_j op pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.filter &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> j&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> old &lt;span style="color:#f92672">=&lt;/span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> str &lt;span style="color:#f92672">=&lt;/span> old&lt;span style="color:#f92672">.&lt;/span>ToCharArray()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;#&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> String&lt;span style="color:#f92672">(&lt;/span>str&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> rst &lt;span style="color:#f92672">=&lt;/span> checkLoop &lt;span style="color:#f92672">(&lt;/span>fst start&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>snd start&lt;span style="color:#f92672">)&lt;/span> 0 &lt;span style="color:#f92672">(&lt;/span>HashSet()&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lines&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> old
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rst&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.length
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Advent of Code 2024 Day3</title><link>https://zangruizhe.github.io/post/aoc2024_day3/</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><guid>https://zangruizhe.github.io/post/aoc2024_day3/</guid><description>&lt;p>Today&amp;rsquo;s question should process the &lt;code>whole input together&lt;/code>.&lt;/p>
&lt;p>If you process input line by line, you can pass Q1, but &lt;code>can not&lt;/code> pass Q2&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fsharp" data-lang="fsharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">module&lt;/span> Day3 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> Q1 &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> str &lt;span style="color:#f92672">=&lt;/span> String.Concat&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str &lt;span style="color:#f92672">|&amp;gt;&lt;/span> split2IntByReg &lt;span style="color:#e6db74">&amp;#34;mul&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#e6db74">((&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#e6db74">d+),(&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#e6db74">d+)&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Array.sumBy &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> n &lt;span style="color:#f92672">-&amp;gt;&lt;/span> n&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">*&lt;/span> n&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> Q2 &lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>[]&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> str &lt;span style="color:#f92672">=&lt;/span> String.Concat&lt;span style="color:#f92672">(&lt;/span>lines&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Regex.Matches&lt;span style="color:#f92672">(&lt;/span>str&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">@&amp;#34;mul\((\d+),(\d+)\)|don&amp;#39;t\(\)|do\(\)&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.fold
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">,&lt;/span> isEnable&lt;span style="color:#f92672">)&lt;/span> m &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> m&lt;span style="color:#f92672">.&lt;/span>Value&lt;span style="color:#f92672">.&lt;/span>StartsWith&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mul&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> isEnable &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#f92672">@&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#f92672">(&lt;/span>int m&lt;span style="color:#f92672">.&lt;/span>Groups&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">].&lt;/span>Value&lt;span style="color:#f92672">,&lt;/span> int m&lt;span style="color:#f92672">.&lt;/span>Groups&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">].&lt;/span>Value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">],&lt;/span> isEnable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l&lt;span style="color:#f92672">,&lt;/span> isEnable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> m&lt;span style="color:#f92672">.&lt;/span>Value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;do()&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> m&lt;span style="color:#f92672">.&lt;/span>Value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;don&amp;#39;t()&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> failwith &lt;span style="color:#f92672">$&lt;/span>&lt;span style="color:#e6db74">&amp;#34;wrong patten m={m.Value}&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>[]&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> fst
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">|&amp;gt;&lt;/span> Seq.sumBy &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#f92672">(&lt;/span>l&lt;span style="color:#f92672">,&lt;/span> r&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> l &lt;span style="color:#f92672">*&lt;/span> r&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>